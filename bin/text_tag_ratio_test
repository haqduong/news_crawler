#! /usr/bin/env ruby
# -*- coding: utf-8 -*-

#--
# NewsCrawler - a website crawler
#
# Copyright (C) 2013 - Hà Quang Dương <contact@haqduong.net>
#
# This file is part of NewsCrawler.
#
# NewsCrawler is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# NewsCrawler is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NewsCrawler.  If not, see <http://www.gnu.org/licenses/>.
#++

# Example

require 'optparse'
require 'news_crawler/config'
require 'news_crawler/nc_logger'

require 'news_crawler/processing/text_tag_ratio_analysis'
require 'news_crawler/storage/url_queue'

include NewsCrawler::Storage

config = SimpleConfig.for :application

SimpleConfig.for :application do | conf |
  set :prefix, 'vne'
  #set :prefix, 'tnl'
end

NewsCrawler::Storage::RawData.set_engine(config.db.engine.intern)
NewsCrawler::Storage::URLQueue.set_engine(config.db.engine.intern)
NewsCrawler::Storage::YAMLStor.set_engine(config.db.engine.intern)

NewsCrawler::NCLogger.set_level Logger::INFO

URLQueue.mark_all('NewsCrawler::Processing::TextTagRatioAnalysis', URLQueue::UNPROCESSED)

processor = NewsCrawler::Processing::TextTagRatioAnalysis.new
#re1 = processor.extract_content("http://www.thanhnien.com.vn/pages/20130930/my-quan-ngai-hop-dong-vu-khi-tho-trung.aspx")

#re1 = processor.extract_content("http://vnexpress.net/tin-tuc/xa-hoi/chay-rui-trung-tam-thuong-mai-hai-duong-2879626.html")

#puts re1.inspect


#puts re1[:content]

#puts "Title: " + re1[:title]
#puts re1[:content]


result = processor.get_result

output = []

result.each do | key, val |
  if val[:type] == :article
    o = {}
    o[:url] = key
    o.merge! val
    output << o
    #    count += 1 if output[:type] == :article
  end
end


count = 0


File.open("/tmp/vne.yaml",'w') do | f |
  f.puts output.to_yaml
  result.each do | key, val |
    if val[:type] == :article
      output = {}
      output[:url] = key
      output.merge! val
      f.puts output.to_yaml
    end
  end
end

return 0
