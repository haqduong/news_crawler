#! /usr/bin/env ruby
# -*- coding: utf-8 -*-

#--
# NewsCrawler - a website crawler
#
# Copyright (C) 2013 - Hà Quang Dương <contact@haqduong.net>
#
# This file is part of NewsCrawler.
#
# NewsCrawler is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# NewsCrawler is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NewsCrawler.  If not, see <http://www.gnu.org/licenses/>.
#++

require 'optparse'
require 'news_crawler/config'
require 'news_crawler/nc_logger'

require 'news_crawler/processing/text_tag_ratio_analysis'
require 'news_crawler/storage/url_queue'

include NewsCrawler::Storage

config = SimpleConfig.for :application

SimpleConfig.for :application do | conf |
  set :prefix, 'vne'
#  set :prefix, 'dantri'
end

NewsCrawler::Storage::RawData.set_engine(config.db.engine.intern)
NewsCrawler::Storage::URLQueue.set_engine(config.db.engine.intern)


URLQueue.mark_all('NewsCrawler::Processing::TextTagRatioAnalysis', URLQueue::UNPROCESSED)

puts config.inspect

processor = NewsCrawler::Processing::TextTagRatioAnalysis.new
#re1 = processor.extract_content("http://vnexpress.net/tin-tuc/the-gioi/tu-lieu/cong-chua-xinh-dep-nhat-chau-au-khong-mang-ngoi-bau-2837275.html")
#re1 = processor.extract_content("http://www.dantri.com.vn/chuyen-la/bi-bat-vi-te-bay-len-hoa-qua-trong-sieu-thi-782390.htm")

#puts re1[:content]

#puts "Title: " + re1[:title]
#puts re1[:content]

#re2 = processor.extract_content("http://vnexpress.net/tin-tuc/the-gioi/kate-chi-bon-cho-con-dau-long-2837873.html")
#puts re2[:content]

#re = processor.extract_content("http://giaitri.vnexpress.net/tin-tuc/thoi-trang/lam-dep/giam-can-cung-can-sang-tao-2852223.html")

#puts re[:content]


result = processor.get_result
File.open("/tmp/vne.yaml",'w') do | f |
  result.each do | key, val |
    output = {}
    output[:url] = key
    output.merge! val
    f.puts output.to_yaml
  end
end
